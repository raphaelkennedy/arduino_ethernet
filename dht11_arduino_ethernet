#include <EthernetUdp.h>
#include <util.h>
#include <EthernetServer.h>
#include <Dns.h>
#include <EthernetClient.h
#include <Ethernet.h>
#include <Dhcp.h>
#include <SPI.h>
#include <dht.h>

#define DHTPIN A1 // pino que estamos conectado
#define DHTTYPE DHT11 // DHT 11
DHT dht(DHTPIN, DHTTYPE);

// A linha abaixo permite que voce defina o endereço
// fisico (MAC ADDRESS) da placa de rede
byte mac[] = { 0xDE, 0xAD, 0xBE, 0xEF, 0xFE, 0xED };

//servidor arduino
char serverName[] = "arduino.live";

// Caso desejar ip estático defina endereço IP, gateway e máscara.
// Configure de acordo com a sua rede. 
// Deixei DHCP
//byte ip[] = {192,168,0,5}         //Define o endereço IP
//IPAddress gateway(192,168,0,1};   //Define o gateway
//IPAddress subnet(255, 255, 255, 0); //Define a máscara de rede
EthernetClient client;

// Inicializando a biblioteca Ehternet
// 80 é a porta que será usada. (padrão http)
EthernetServer server(80);

void setup(){
  Serial.begin(9600);
  dht.begin();
  if (Ethernet.begin(mac) == 0) {
    Serial.println("Falha na Conexao DHCP ");
    // no point in carrying on, so do nothing forevermore:
  }
 
  server.begin();
  Serial.print("Servidor iniciado em: ");
  Serial.println(Ethernet.localIP());

}


void loop(){

 float h = dht.readHumidity();
 float t = dht.readTemperature();

  EthernetClient client = server.available();
  if (client) {
    while (client.connected()) {
      {
          client.println("HTTP/1.1 200 OK");
          client.println("Content-Type: text/html");
          client.println();
          
          client.println("<HTML>");
          client.println("<BODY>");
          client.println("<H1>Arduino WEB</H1>");
          client.println("<hr />");
          client.println("<br />");
          client.println("Meu IP: ");
          client.println(Ethernet.localIP());
          client.println("Umidade: ");
          client.println(h);
          client.println("<br>");
          client.println("Temperatura: ");
          client.println(t);
          client.println("</BODY>");
          client.println("</HTML>");
          
          delay(1);
          client.stop();
        }
      }
    }
  }
